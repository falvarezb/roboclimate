import pandas as pd
import numpy as np
from roboclimate.metrics import mean_absolute_scaled_error_tx as masetx, mean_absolute_scaled_error_1year as mase1y
from roboclimate.config import day_factor
import roboclimate.metrics as rmet
import roboclimate.util as rutil


def test_mase():
    """
         temp   dt              today       t5   t4   t3   t2   t1
    00   1      1575082800      2019-11-30  4.0  3    2.0  1    1.0
    01   2      1575093600      2019-11-30  3    1    4.0  5    3
    02   1      1575104400      2019-11-30  4.0  3    2.0  1    1.0
    03   2      1575115200      2019-11-30  3    1    4.0  5    3
    04   1      1575126000      2019-11-30  4.0  3    2.0  1    1.0
    05   2      1575136800      2019-11-30  3    1    4.0  5    3
    06   1      1575147600      2019-11-30  4.0  3    2.0  1    1.0
    07   2      1575158400      2019-12-01  3    1    4.0  5    3
    08   2      1575169200      2019-12-01  4.0  3    2.0  1    1.0
    09   2      1575180000      2019-12-01  4.0  3    2.0  1    1.0
    10   2      1575190800      2019-12-01  4.0  3    2.0  1    1.0
    11   2      1575201600      2019-12-01  4.0  3    2.0  1    1.0
    12   2      1575212400      2019-12-01  4.0  3    2.0  1    1.0
    13   2      1575223200      2019-12-01  4.0  3    2.0  1    1.0
    14   2      1575234000      2019-12-01  4.0  3    2.0  1    1.0
    15   2      1575244800      2019-12-02  4.0  3    2.0  1    1.0
    16   2      1575255600      2019-12-02  4.0  3    2.0  1    1.0
    """
    joined_data = pd.DataFrame({'temp': [1, 2, 1, 2, 1, 2, 1, 2, 2] + [2] * day_factor,
                                'dt': [1575082800, 1575093600, 1575104400, 1575115200, 1575126000, 1575136800, 1575147600, 1575158400, 1575169200, 1575180000, 1575190800, 1575201600, 1575212400, 1575223200, 1575234000, 1575244800, 1575255600],
                                'today': ['2019-11-30'] * 7 + ['2019-12-01'] * day_factor + ['2019-12-02'] * 2,
                                't5': [4.0, 3, 4.0, 3, 4.0, 3, 4.0, 3, 4.0] + [4.0] * day_factor,
                                't4': [3, 1, 3, 1, 3, 1, 3, 1, 3] + [3] * day_factor,
                                't3': [2.0, 4.0, 2.0, 4.0, 2.0, 4.0, 2.0, 4.0, 2.0] + [2.0] * day_factor,
                                't2': [1, 5, 1, 5, 1, 5, 1, 5, 1] + [1] * day_factor,
                                't1': [1.0, 3, 1.0, 3, 1.0, 3, 1.0, 3, 1.0] + [1.0] * day_factor})

    assert masetx(joined_data, 'temp') == [np.nan, np.nan, np.nan, 1, 2.25]


def test_mase_non_consecutive_values():
    """
         temp   dt              today       t5   t4   t3   t2   t1
    00   1      1574899200      2019-11-28  4.0  3    2.0  1    1.0
    01   2      1575093600      2019-11-30  3    1    4.0  5    3
    02   1      1575104400      2019-11-30  4.0  3    2.0  1    1.0
    03   2      1575115200      2019-11-30  3    1    4.0  5    3
    04   1      1575126000      2019-11-30  4.0  3    2.0  1    1.0
    05   2      1575136800      2019-11-30  3    1    4.0  5    3
    06   1      1575147600      2019-11-30  4.0  3    2.0  1    1.0
    07   2      1575158400      2019-12-01  3    1    4.0  5    3
    08   2      1575169200      2019-12-01  4.0  3    2.0  1    1.0
    09   2      1575180000      2019-12-01  4.0  3    2.0  1    1.0
    10   2      1575190800      2019-12-01  4.0  3    2.0  1    1.0
    11   2      1575201600      2019-12-01  4.0  3    2.0  1    1.0
    12   2      1575212400      2019-12-01  4.0  3    2.0  1    1.0
    13   2      1575223200      2019-12-01  4.0  3    2.0  1    1.0
    14   2      1575234000      2019-12-01  4.0  3    2.0  1    1.0
    15   2      1575244800      2019-12-02  4.0  3    2.0  1    1.0
    16   2      1575255600      2019-12-02  4.0  3    2.0  1    1.0
    """
    joined_data = pd.DataFrame({'temp': [1, 2, 1, 2, 1, 2, 1, 2, 2] + [2] * day_factor,
                                'dt': [1574899200, 1575093600, 1575104400, 1575115200, 1575126000, 1575136800, 1575147600, 1575158400, 1575169200, 1575180000, 1575190800, 1575201600, 1575212400, 1575223200, 1575234000, 1575244800, 1575255600],
                                'today': ['2019-11-28'] * 7 + ['2019-12-01'] * day_factor + ['2019-12-02'] * 2,
                                't5': [4.0, 3, 4.0, 3, 4.0, 3, 4.0, 3, 4.0] + [4.0] * day_factor,
                                't4': [3, 1, 3, 1, 3, 1, 3, 1, 3] + [3] * day_factor,
                                't3': [2.0, 4.0, 2.0, 4.0, 2.0, 4.0, 2.0, 4.0, 2.0] + [2.0] * day_factor,
                                't2': [1, 5, 1, 5, 1, 5, 1, 5, 1] + [1] * day_factor,
                                't1': [1.0, 3, 1.0, 3, 1.0, 3, 1.0, 3, 1.0] + [1.0] * day_factor})
    
    np.testing.assert_allclose(masetx(joined_data, 'temp'), [np.nan, np.nan, np.nan, np.nan, 2.6666666])


